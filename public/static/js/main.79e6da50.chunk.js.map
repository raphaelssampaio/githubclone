{"version":3,"sources":["services/api.js","services/github.js","screen/Main/styles.js","screen/Main/index.js","screen/Repos/index.js","index.js","App.js"],"names":["api","axios","create","baseURL","getRepositories","repoName","axiosAPI","get","Container","styled","div","HeaderText","h3","CardTitle","CardDescription","p","CardForks","CardStars","NewCard","Card","attrs","props","title","cardTitle","RepoCards","AvatarImage","img","AvatarContainer","AvatarData","AvatarInfo","SeeAllHyper","Button","Link","a","GoTo","Main","useState","repo","setRepo","avatar","setAvatar","setRepoName","ownerType","setOwnerType","ownerUrl","setOwnerUrl","mir","setMir","useEffect","async","resp","data","getRepo","aux","map","r","stargazers_count","forks_count","length","push","getMir","owner","avatar_url","login","type","html_url","src","name","description","size","target","href","Repos","repos","match","params","icon","style","color","ReactDOM","render","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.79e6da50.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/users/',\n})\n\nexport default api\n","import axiosAPI from './api'\n\nexport const getRepositories = repoName => axiosAPI.get(`${repoName}/repos`)\n","import styled from 'styled-components'\nimport { Card, Button } from 'antd'\n\nexport const Container = styled.div``\n\nexport const HeaderText = styled.h3`\n  color: darkslateblue;\n`\nexport const CardTitle = styled.h3`\n  color: whitesmoke;\n`\nexport const CardDescription = styled.p`\n  color: lightyellow;\n`\nexport const CardForks = styled.p`\n  color: lightyellow;\n`\nexport const CardStars = styled.p`\n  color: lightyellow;\n`\n\nexport const NewCard = styled(Card).attrs(props => {\n  return {\n    title: props.cardTitle,\n  }\n})`\n  background-color: darkslateblue;\n  width: 300px;\n  border-width: 10px;\n  border-radius: 5px;\n  border-color: black;\n  padding: 5px;\n  margin-right: 5px;\n`\nexport const RepoCards = styled.div`\n  padding: 20px;\n  border: 1px solid gainsboro;\n  display: flex;\n  flex-direction: row;\n  border-radius: 5px;\n`\n\nexport const AvatarImage = styled.img`\n  width: 100px;\n`\n\nexport const AvatarContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n  border: 1px solid darkslateblue;\n  border-radius: 5px;\n`\nexport const AvatarData = styled.p`\n  font-family: sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n  margin-left: 10px;\n`\nexport const AvatarInfo = styled.div``\n\nexport const SeeAllHyper = styled(Button)`\n  font-size: 16px;\n  margin-top: 10px;\n  border-radius: 5px;\n  width: 150px;\n  height: 30px;\n`\n\nexport const Link = styled.a`\n  text-decoration: none;\n  color: black;\n`\nexport const GoTo = styled(Button)`\n  font-size: 16px;\n  margin: 5px;\n  border-radius: 5px;\n  height: 30px;\n  background-color: darkslateblue;\n  color: whitesmoke;\n`\n","import React, { useState, useEffect } from 'react'\nimport { getRepositories } from '../../services/github'\nimport {\n  Container,\n  HeaderText,\n  CardTitle,\n  CardDescription,\n  NewCard,\n  RepoCards,\n  CardStars,\n  CardForks,\n  AvatarImage,\n  AvatarContainer,\n  AvatarData,\n  AvatarInfo,\n  SeeAllHyper,\n  Link,\n} from './styles'\n\nexport default function Main() {\n  const [repo, setRepo] = useState([])\n  const [avatar, setAvatar] = useState('')\n  const [repoName, setRepoName] = useState('')\n  const [ownerType, setOwnerType] = useState('')\n  const [ownerUrl, setOwnerUrl] = useState('')\n  const [mir, setMir] = useState([])\n\n  useEffect(() => {\n    async function getRepo() {\n      const resp = await getRepositories('camunda')\n      setRepo(resp.data)\n    }\n    getRepo()\n  }, [])\n\n  useEffect(() => {\n    getMir()\n    repo.map(r => {\n      if (avatar === '') {\n        setAvatar(r.owner.avatar_url)\n        setRepoName(r.owner.login)\n        setOwnerType(r.owner.type)\n        setOwnerUrl(r.owner.html_url)\n      }\n    })\n  }, [repo])\n\n  function getMir() {\n    let aux\n    repo.map(r => {\n      if (r.stargazers_count > 5 || r.forks_count > 5) {\n        if (mir.length < 4) {\n          aux = r\n          mir.push(aux)\n          setMir(mir)\n        }\n      }\n    })\n  }\n\n  return (\n    <Container>\n      <AvatarContainer>\n        <AvatarImage src={avatar} />\n        <AvatarInfo>\n          <AvatarData>Repo owner: {repoName}</AvatarData>\n          <AvatarData>Type: {ownerType}</AvatarData>\n        </AvatarInfo>\n      </AvatarContainer>\n      <HeaderText>Pinned repositories</HeaderText>\n      <RepoCards>\n        {mir.map(r => (\n          <NewCard>\n            <CardTitle>{r.name}</CardTitle>\n            <CardDescription>{r.description}</CardDescription>\n            <CardStars>Stars: â˜… {r.stargazers_count}</CardStars>\n            <CardForks>Forks: {r.forks_count}</CardForks>\n          </NewCard>\n        ))}\n      </RepoCards>\n      <SeeAllHyper type=\"primary\" size=\"large\">\n        <Link target=\"_blank\" href={ownerUrl}>\n          See all repositories\n        </Link>\n      </SeeAllHyper>\n    </Container>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { getRepositories } from '../../services/github'\nimport {\n  Container,\n  HeaderText,\n  CardTitle,\n  CardDescription,\n  NewCard,\n  RepoCards,\n  CardStars,\n  CardForks,\n  AvatarImage,\n  AvatarContainer,\n  AvatarData,\n  AvatarInfo,\n  SeeAllHyper,\n  Link,\n  GoTo,\n} from '../Main/styles'\n\nexport default function Repos(props) {\n  const [repo, setRepo] = useState([])\n  const [avatar, setAvatar] = useState('')\n  const [repoName, setRepoName] = useState('')\n  const [ownerType, setOwnerType] = useState('')\n  const [ownerUrl, setOwnerUrl] = useState('')\n  const [mir, setMir] = useState([])\n\n  useEffect(() => {\n    async function getRepo() {\n      const { repos } = props.match.params\n      const resp = await getRepositories(repos)\n      setRepo(resp.data)\n    }\n    getRepo()\n  }, [])\n\n  useEffect(() => {\n    getMir()\n    repo.map(r => {\n      if (avatar === '') {\n        setAvatar(r.owner.avatar_url)\n        setRepoName(r.owner.login)\n        setOwnerType(r.owner.type)\n        setOwnerUrl(r.owner.html_url)\n      }\n    })\n  }, [repo])\n\n  function getMir() {\n    let aux\n    repo.map(r => {\n      if (mir.length < 4) {\n        if (r.stargazers_count > 1 || r.forks_count > 1) {\n          aux = r\n          mir.push(aux)\n          setMir(mir)\n        } else {\n          aux = r\n          mir.push(aux)\n        }\n      }\n    })\n  }\n\n  return (\n    <Container>\n      <GoTo icon=\"home\">\n        <Link href=\"/\" style={{ color: 'white' }}>\n          {' '}\n          Home\n        </Link>\n      </GoTo>\n      <AvatarContainer>\n        <AvatarImage src={avatar} />\n        <AvatarInfo>\n          <AvatarData>Repo owner: {repoName}</AvatarData>\n          <AvatarData>Type: {ownerType}</AvatarData>\n        </AvatarInfo>\n      </AvatarContainer>\n      <HeaderText>Pinned repositories</HeaderText>\n      <RepoCards>\n        {mir.map(r => (\n          <NewCard>\n            <CardTitle>{r.name}</CardTitle>\n            <CardDescription>{r.description}</CardDescription>\n            <CardStars>Stars: â˜… {r.stargazers_count}</CardStars>\n            <CardForks>Forks: {r.forks_count}</CardForks>\n          </NewCard>\n        ))}\n      </RepoCards>\n      <SeeAllHyper type=\"primary\" size=\"large\">\n        <Link target=\"_blank\" href={ownerUrl}>\n          See all repositories\n        </Link>\n      </SeeAllHyper>\n    </Container>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Main from './screen/Main'\nimport Repos from './screen/Repos'\n\nexport default function src() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/:repos\" component={Repos} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n"],"sourceRoot":""}